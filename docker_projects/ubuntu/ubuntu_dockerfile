FROM ubuntu:22.04 AS build_base

RUN echo 'APT::Install-Suggests "0";' >> /etc/apt/apt.conf.d/00-docker
RUN echo 'APT::Install-Recommends "0";' >> /etc/apt/apt.conf.d/00-docker
    
# Install basic build tools
RUN apt-get update \
    && apt-get upgrade -y \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        make \
        unzip \
        # The tools in this package are used when installing packages for Python
        build-essential \
        swig3.0 \
        # Required for PostgreSQL
        libpq-dev \
        # Required for mysqlclient
        default-libmysqlclient-dev \
        # Required for ts
        moreutils \
        rsync \
        zip \
        libgdiplus \
        jq \
        # By default pip is not available in the buildpacks image
        python-pip-whl \
        python3-pip \
        #.NET Core related pre-requisites
        libc6 \
        libgcc1 \
        libgssapi-krb5-2 \
        libncurses5 \
        liblttng-ust0 \
        libssl-dev \
        libstdc++6 \
        zlib1g \
        libuuid1 \
        libunwind8 \
        sqlite3 \
        libsqlite3-dev \
        software-properties-common \
        tk-dev \
        uuid-dev \
        curl \
        gettext \
        inotify-tools \
        wget \
        tmux \
    && rm -rf /var/lib/apt/lists/* \
    # This is the folder containing 'links' to benv and build script generator
    && apt-get update \
    && apt-get upgrade -y \
    && add-apt-repository universe \
    && rm -rf /var/lib/apt/lists/*

# Verify expected build and debug tools are present
RUN apt-get update \
    && apt-get -y install build-essential cmake cppcheck valgrind clang lldb llvm gdb python3-dev \
    # Install tools and shells not in common script
    && apt-get install -yq vim vim-doc xtail software-properties-common libsecret-1-dev \
    # Install additional tools (useful for 'puppeteer' project)
    && apt-get install -y --no-install-recommends libnss3 libnspr4 libatk-bridge2.0-0 libatk1.0-0 libx11-6 libpangocairo-1.0-0 \
                                                  libx11-xcb1 libcups2 libxcomposite1 libxdamage1 libxfixes3 libpango-1.0-0 libgbm1 libgtk-3-0 \
    # Clean up
    && apt-get autoremove -y && apt-get clean -y 
    
# Mount for docker-in-docker 
VOLUME [ "/var/lib/docker" ]
  
## sdkman
RUN curl -s "https://get.sdkman.io" | bash

RUN apt-add-repository ppa:fish-shell/release-3 \
  && apt update \
  && apt install fish
  
## oh my fish
RUN curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install > install
RUN fish install --noninteractive
RUN rm install
## theme agnoster - fish
RUN fish -c 'omf install agnoster' 
RUN fish -c 'omf theme agnoster'

# RUN groupadd --gid 1000 developer \
#   && useradd --uid 1000 --gid developer --shell /bin/bash --create-home developer

# ENV DEBIAN_FRONTEND=1
# ENV PATH /usr/lib/ccache:$PATH

# COPY --chown=root:developer ./scripts/* /home/developer/scripts/
# RUN /home/developer/scripts/install.sh && /home/developer/scripts/mkdir.sh \
#   && /home/developer/scripts/ccache.sh && /home/developer/scripts/clone.sh \
#   && /home/developer/scripts/build.sh && make install -C /home/developer/nodejs/node \
#   && /home/developer/scripts/ncu.sh

# WORKDIR /home/developer/nodejs/node